import {createProviderFactory} from './Provider'

type ProviderConfig = {
  access_key?: string
  allowed_account_ids?: Array<string>
  forbidden_account_ids?: Array<string>
  insecure?: boolean
  max_retries?: number
  profile?: string
  region: string
  s3_force_path_style?: boolean
  secret_key?: string
  shared_credentials_file?: string
  skip_credentials_validation?: boolean
  skip_get_ec2_platforms?: boolean
  skip_metadata_api_check?: boolean
  skip_region_validation?: boolean
  skip_requesting_account_id?: boolean
  token?: string
  assume_role?: {external_id?: string; policy?: string; role_arn?: string; session_name?: string}
  endpoints?: Array<{
    accessanalyzer?: string
    acm?: string
    acmpca?: string
    amplify?: string
    apigateway?: string
    applicationautoscaling?: string
    applicationinsights?: string
    appmesh?: string
    appstream?: string
    appsync?: string
    athena?: string
    autoscaling?: string
    autoscalingplans?: string
    backup?: string
    batch?: string
    budgets?: string
    cloud9?: string
    cloudformation?: string
    cloudfront?: string
    cloudhsm?: string
    cloudsearch?: string
    cloudtrail?: string
    cloudwatch?: string
    cloudwatchevents?: string
    cloudwatchlogs?: string
    codebuild?: string
    codecommit?: string
    codedeploy?: string
    codepipeline?: string
    cognitoidentity?: string
    cognitoidp?: string
    configservice?: string
    cur?: string
    dataexchange?: string
    datapipeline?: string
    datasync?: string
    dax?: string
    devicefarm?: string
    directconnect?: string
    dlm?: string
    dms?: string
    docdb?: string
    ds?: string
    dynamodb?: string
    ec2?: string
    ecr?: string
    ecs?: string
    efs?: string
    eks?: string
    elasticache?: string
    elasticbeanstalk?: string
    elastictranscoder?: string
    elb?: string
    emr?: string
    es?: string
    firehose?: string
    fms?: string
    forecast?: string
    fsx?: string
    gamelift?: string
    glacier?: string
    globalaccelerator?: string
    glue?: string
    greengrass?: string
    guardduty?: string
    iam?: string
    imagebuilder?: string
    inspector?: string
    iot?: string
    iotanalytics?: string
    iotevents?: string
    kafka?: string
    kinesis?: string
    kinesis_analytics?: string
    kinesisanalytics?: string
    kinesisanalyticsv2?: string
    kinesisvideo?: string
    kms?: string
    lakeformation?: string
    lambda?: string
    lexmodels?: string
    licensemanager?: string
    lightsail?: string
    macie?: string
    managedblockchain?: string
    marketplacecatalog?: string
    mediaconnect?: string
    mediaconvert?: string
    medialive?: string
    mediapackage?: string
    mediastore?: string
    mediastoredata?: string
    mq?: string
    neptune?: string
    networkmanager?: string
    opsworks?: string
    organizations?: string
    personalize?: string
    pinpoint?: string
    pricing?: string
    qldb?: string
    quicksight?: string
    r53?: string
    ram?: string
    rds?: string
    redshift?: string
    resourcegroups?: string
    route53?: string
    route53domains?: string
    route53resolver?: string
    s3?: string
    s3control?: string
    sagemaker?: string
    sdb?: string
    secretsmanager?: string
    securityhub?: string
    serverlessrepo?: string
    servicecatalog?: string
    servicediscovery?: string
    servicequotas?: string
    ses?: string
    shield?: string
    sns?: string
    sqs?: string
    ssm?: string
    stepfunctions?: string
    storagegateway?: string
    sts?: string
    swf?: string
    synthetics?: string
    transfer?: string
    waf?: string
    wafregional?: string
    wafv2?: string
    worklink?: string
    workmail?: string
    workspaces?: string
    xray?: string
  }>
  ignore_tags?: {key_prefixes?: Array<string>; keys?: Array<string>}
}

export const createProvider = createProviderFactory<ProviderConfig>()
